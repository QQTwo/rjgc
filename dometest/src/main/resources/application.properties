#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=root
##如果使用Oracle数据库支持，因为版权问题驱动不能通过maven依赖配置直接从repository下载
##需要手工配置，配置路径 File->Project Structure->libraries-> + ->java  然后选中
##存放驱动包的目录，选择ojdbc6-11.2.0.3.jar 就ok。
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@172.20.0.8:1521:ORcldb
spring.datasource.username=scott
spring.datasource.password=tiger
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
logging.level.root=info
debug=false

#web.upload-path=E:/jsr_img/
#这个属于自定义的属性，指定了一个路径，注意要以/结尾；
#spring.mvc.static-path-pattern=/static/**
#表示所有的访问都经过静态资源路径；
#spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${web.upload-path}
#最末尾加上file:${web.upload-path}。之所以要加file:是因为要在这里指定一个具体的硬盘路径，其他的使用classpath指定的是系统环境变量；

#################
#spring.datasource.dbcp2.url=jdbc:oracle:thin:@localhost:1521:ORADB
#spring.datasource.dbcp2.driver=class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.dbcp2.username=scott
#spring.datasource.dbcp2.password=tiger
#使用dbcp2连接池，不使用默认的
spring.datasource.type = org.apache.commons.dbcp2.BasicDataSource
#初始化连接
spring.datasource.dbcp2.initial-size = 10
spring.datasource.dbcp2.max-wait-millis = 10000
#最大空闲连接
spring.datasource.dbcp2.max-idle=20
#最小空闲连接
spring.datasource.dbcp2.min-idle=5
spring.datasource.dbcp2.pool-prepared-statements = true
spring.datasource.dbcp2.max-open-prepared-statements = 20
#检测数据库的查询语句
spring.datasource.dbcp2.validation-query = select 1 from dual
#（即在获取Connection对象时检测其可用性）  这样会影响性能，但是这个配置是最有效的。
#spring.datasource.dbcp2.test-on-borrow = true
#设置当连接被归还时，是否要提交所有还未完成的事务
#spring.datasource.dbcp2.test-on-return = false
#有些数据库连接的时候有超时限制（mysql连接在8小时后断开），或者由于网络中断等原因，连接池的连接会出现失效的情况，这时候设置一个testWhileIdle参数为true，可以保证连接池内部定时检测连接的可用性，不可用的连接会被抛弃或者重建，最大情况的保证从连接池中得到的Connection对象是可用的
#spring.datasource.dbcp2.test-while-idle = true
#每隔五分钟检测空闲超过10分钟的连接
spring.datasource.dbcp2.min-evictable-idle-time-millis = 600000
spring.datasource.dbcp2.time-between-eviction-runs-millis = 300000
###############
#来源：CSDN
#原文：https://blog.csdn.net/u014078154/article/details/79022243